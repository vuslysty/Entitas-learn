//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DoorStateComponent doorState { get { return (DoorStateComponent)GetComponent(GameComponentsLookup.DoorState); } }
    public bool hasDoorState { get { return HasComponent(GameComponentsLookup.DoorState); } }

    public void AddDoorState(bool newIsOpen) {
        var index = GameComponentsLookup.DoorState;
        var component = (DoorStateComponent)CreateComponent(index, typeof(DoorStateComponent));
        component.isOpen = newIsOpen;
        AddComponent(index, component);
    }

    public void ReplaceDoorState(bool newIsOpen) {
        var index = GameComponentsLookup.DoorState;
        var component = (DoorStateComponent)CreateComponent(index, typeof(DoorStateComponent));
        component.isOpen = newIsOpen;
        ReplaceComponent(index, component);
    }

    public void RemoveDoorState() {
        RemoveComponent(GameComponentsLookup.DoorState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDoorState;

    public static Entitas.IMatcher<GameEntity> DoorState {
        get {
            if (_matcherDoorState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DoorState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDoorState = matcher;
            }

            return _matcherDoorState;
        }
    }
}
